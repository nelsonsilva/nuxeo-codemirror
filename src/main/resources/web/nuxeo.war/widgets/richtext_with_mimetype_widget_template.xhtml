<f:subview xmlns:f="http://java.sun.com/jsf/core"
  xmlns:h="http://java.sun.com/jsf/html"
  xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
  xmlns:nxu="http://nuxeo.org/nxweb/util"
  xmlns:nxdir="http://nuxeo.org/nxdirectory"
  xmlns:c="http://java.sun.com/jstl/core"
  xmlns:rich="http://richfaces.org/rich"
  xmlns:nxh="http://nuxeo.org/nxweb/html"
  xmlns:nxp="http://nuxeo.org/nxweb/pdf">
<c:if test="#{nxl:isLikePlainMode(widget.mode)}">#{field_0}</c:if>
<c:if test="#{nxl:isLikeViewMode(widget.mode)}">

  <c:if test="#{not empty field_0}">
    <div class="#{widgetProperty_cssClass}" dir="auto">
      <c:choose>
        <c:when test="#{(field_1 == 'text/html') or (empty field_1)}">
          <nxu:set var="translatedHtml"
            value="#{widgetProperty_translatedHtml}"
            cache="true">
            <c:if test="#{!empty translatedHtml}">
              <h:outputText value="#{translatedHtml}" escape="false" />
            </c:if>
            <c:if test="#{empty translatedHtml}">
              <h:outputText value="#{field_0}" escape="false" />
            </c:if>
          </nxu:set>
        </c:when>
        <c:when test="#{field_1 == 'text/x-web-markdown'}">
          <h:outputText value="#{richTextEditorActions.convertToHtml(field_0, field_1)}" escape="false" />
        </c:when>
        <c:otherwise>
          <pre>
            <h:outputText value="#{field_0}" />
          </pre>
        </c:otherwise>
      </c:choose>
    </div>
  </c:if>

</c:if>
<c:if test="#{widget.mode == 'edit'}">

  <c:set var="width"
    value="#{nxu:test(!empty widgetProperty_width, widgetProperty_width, '640')}" />
  <c:set var="height"
    value="#{nxu:test(!empty widgetProperty_height, widgetProperty_height, '400')}" />
  <c:set var="cols"
    value="#{nxu:test(!empty widgetProperty_cols, widgetProperty_cols, '100')}" />
  <c:set var="rows"
    value="#{nxu:test(!empty widgetProperty_rows, widgetProperty_rows, '25')}" />
  <c:set var="editorSelector"
    value="#{nxu:test(!empty widgetProperty_editorSelector, widgetProperty_editorSelector, 'mceEditor')}" />

<script src="#{baseURL}/codemirror/codemirror.js"></script>
<script src="#{baseURL}/codemirror/codemirror_nuxeo.js"></script>
<script src="#{baseURL}/codemirror/addon/edit/closetag.js"></script>
<script src="#{baseURL}/codemirror/mode/xml/xml.js"></script>
<script src="#{baseURL}/codemirror/mode/javascript/javascript.js"></script>
<script src="#{baseURL}/codemirror/mode/css/css.js"></script>
<script src="#{baseURL}/codemirror/mode/htmlmixed/htmlmixed.js"></script>
<script src="#{baseURL}/codemirror/mode/markdown/markdown.js"></script>

<link rel="stylesheet" href="#{baseURL}/codemirror/codemirror.css"></link>
<style type="text/css">
    .CodeMirror {border: 1px solid black; font-size:13px}
    .CodeMirror-fullscreen {
      display: block;
      position: absolute;
      top: 0; left: 0;
      width: 100%;
      z-index: 9999;
      background: #fff;
    }
</style>

  <nxu:valueHolder id="#{widget.id}_disableHtmlInit"
    var="disableHtmlInit"
    defaultValue="#{field_1 != null and field_1 != 'text/html'}">
    <nxu:set var="disableBinding" value="#{disableHtmlInit}">
      <nxu:editor id="#{widget.id}_editor" value="#{field_0}" width="#{width}"
        cols="#{cols}" height="#{height}" rows="#{rows}"
        editorSelector="#{editorSelector}"
        disableHtmlInit="#{disableBinding}" />
    </nxu:set>
  </nxu:valueHolder>
  <br />

  <h:outputText value="#{messages['label.richtext.format']} " />
  <h:selectOneMenu value="#{field_1}" onchange="changeEditorType(this)"
    id="#{widget.id}_editorselector" styleClass="#{widget.id}">
    <f:selectItem itemLabel="#{messages['mimetype.html']}"
      itemValue="text/html" />
    <f:selectItem itemLabel="#{messages['mimetype.text']}"
      itemValue="text/plain" />
    <f:selectItem itemLabel="#{messages['mimetype.xml']}"
      itemValue="text/xml" />
    <f:selectItem itemLabel="#{messages['mimetype.markdown']}"
      itemValue="text/x-web-markdown" />
    <!-- Some more mimetypes supported by CodeMirror -->
    <!-- TODO - i18n -->
    <f:selectItem itemLabel="Html(source)" itemValue="text/html" />
  </h:selectOneMenu>

<c:set var="editor" value="#{widget.id}_editor" />

<script>
//<![CDATA[
var codeMirrorModeMappings = {
  "text/html" : "text/html",
  "text/x-web-markdown": "markdown",
  "text/xml": "xml"
};
	  
function changeEditorType(cbo) {
  var value = cbo.value;
  var id = cbo.id.replace("_editorselector", "");
  var disableElt = document.getElementById(id + '_disableHtmlInit');
  if (value == "text/html" && cbo.options[cbo.selectedIndex].text == '#{messages['mimetype.html']}') {
	removeCodeMirror(id + '_editor');
    addTinyMCE(id + '_editor');
    disableElt.value = 'false';
  } else {
    removeTinyMCE(id + '_editor');
    disableElt.value = 'true';
    if (codeMirrorModeMappings[value]) {
    	addCodeMirror(id + '_editor', codeMirrorModeMappings[value]);
    } else {
    	removeCodeMirror(id + '_editor');
    }
  }
}

addCodeMirror("#{rich:clientId(editor)}", codeMirrorModeMappings['#{field_1}']);

//]]>
</script>

</c:if>
<c:if test="#{widget.mode == 'pdf'}">
  <c:choose>
    <c:when test="#{field_1 == 'text/x-web-markdown'}">
      <nxp:html><h:outputText value="#{richTextEditorActions.convertToHtml(field_0, field_1)}" escape="false" /></nxp:html>
    </c:when>
    <c:otherwise>
      <nxp:html><h:outputText value="#{field_0}" escape="false" /></nxp:html>
    </c:otherwise>
  </c:choose>
</c:if>
</f:subview>